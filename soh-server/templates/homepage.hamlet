$newline text
<script src="//cdn.rawgit.com/ajaxorg/ace-builds/v1.1.9/src-noconflict/ace.js"></script>
<script src="//cdn.rawgit.com/chjj/term.js/v0.0.4/src/term.js"></script>

<div .content>
  <h1>Calculator
  <h2>Console Version
  <p>How would we write a calculator program in Haskell? A simple calculator should be able to perform the basic arithmetic operations on two numbers.
  <div .soh-code>
    data Operator = Add | Subtract | Multiply | Divide
    \  deriving Read
    \
    eval l o r = case o of
    \  Add      -> l + r
    \  Subtract -> l - r
    \  Multiply -> l * r
    \  Divide   -> l / r
    \
    prompt txt = do
    \  putStrLn txt
    \  readLn
    \
    main = do
    \  l <- prompt "Left operand?"
    \  o <- prompt "Which operator?"
    \  r <- prompt "Right operand?"
    \  putStrLn $ "The result is " ++ show (eval l o r)
  <h2>Yesod Version
  <p>Let's make our calculator program into a website!
  <div .soh-code>
    {-# LANGUAGE TypeFamilies, QuasiQuotes, MultiParamTypeClasses,
    \         TemplateHaskell, OverloadedStrings #-}
    import Yesod hiding (Add, Subtract, Multiply, Divide)
    import Yesod.Form
    import Control.Applicative
    \
    data Calculator = Calculator
    \
    instance Yesod Calculator
    \
    instance RenderMessage Calculator FormMessage where
    \    renderMessage _ _ = defaultFormMessage
    \
    mkYesod "Calculator" [parseRoutes|
    / HomeR GET
    |]
    \
    main = warpEnv Calculator
    \
    data Calculation = Calculation Double Operator Double
    \
    form = renderDivs $ Calculation
    \    <$> areq doubleField               "Left operand"  Nothing
    \    <*> areq (selectField optionsEnum) "Operator"      Nothing
    \    <*> areq doubleField               "Right operand" Nothing
    \
    getHomeR = do
    \    ((result, widget), enctype) <- runFormGet form
    \
    \    let resultText = "Result: " ++ case result of
    \          FormSuccess (Calculation l o r) -> show (eval l o r)
    \          _ -> ""
    \
    \    defaultLayout $ do
    \        [whamlet|
    \            &lt;h1&gt; Calculator &lt;/h1&gt;
    \            &lt;form enctype=&#x23;{enctype}&gt;
    \                &#x5E;{widget}
    \                &lt;input #button type="submit" value="Calculate!"&gt;
    \            &lt;h2&gt; &#x23;{toHtml resultText}
    \          |]
    \        toWidget [cassius|
    \            body          { width: 15em; margin: 0em auto; }
    \            #button       { width: 10em; }
    \            input, select { width: 4em; margin: 0.5em; }
    \            .required     { text-align: right; }
    \          |]
    \
    data Operator = Add | Subtract | Multiply | Divide
    \  deriving (Eq, Enum, Bounded, Show)
    \
    eval l o r = case o of
    \    Add      -> l + r
    \    Subtract -> l - r
    \    Multiply -> l * r
    \    Divide   -> l / r
