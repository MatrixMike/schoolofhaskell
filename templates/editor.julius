// FIXME: Replace this with pure GHCJS. It's just more laborious to do
// so.
function makeEditor(q,defaultValue,onChange,onSelectionChange){
  var editor = ace.edit(q.get(0));
  editor.setTheme("ace/theme/tomorrow");
  editor.session.setMode("ace/mode/haskell");
  editor.renderer.setShowGutter(false);
  if(defaultValue) {
    editor.setValue(defaultValue);
  }
  // editor.setReadOnly(true);
  if(onChange) {
    editor.on("change", function() {
      val = editor.getValue();
      onChange(val);
    });
  }
  if(onSelectionChange) {
    editor.getSelection().on("changeSelection", function() {
      onSelectionChange({});
    });
  }
  return editor;
}

function getSelection(editor){
  var selection = editor.getSelection();
  var anchor = selection.getSelectionAnchor();
  var lead = selection.getSelectionLead();
  return {"anchor-column": anchor.column,
          "anchor-row": anchor.row,
          "lead-column": lead.column,
          "lead-row": lead.row};
}

var staticHighlight = ace.require("ace/ext/static_highlight");

function highlightHaskell(input, callback) {
  staticHighlight.highlight.render(input, "ace/mode/haskell", "ace/theme/tomorrow", 0, true, function(highlighted) {
    callback(highlighted.html);
  });
}
